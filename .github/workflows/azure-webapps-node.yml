name: Deploy Hello Open DIPS app to Azure
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        yarn install
        yarn run build --if-present

    - name: Create storage account  
      uses: azure/CLI@v1
      with:
        inlineScript: |
            az storage account create --name ${{secrets.AZURE_STORAGE_ACCOUNT_NAME}} \
            --resource-group ${{secrets.AZURE_RESOURCE_GROUP_NAME}} \
            --location "norwayeast"

    - name: "Enable static websites in storage account"
      uses: azure/CLI@1
      with: 
        inlineScript: |
          az storage blob service-properties update \
          --account-name ${{secrets.AZURE_STORAGE_ACCOUNT_NAME}}  \
          --static-website \
          --404-document 404/index.html \
          --index-document index.html

    - name: Create storage container
      uses: azure/CLI@v1
      with:
        inlineScript: |
            az storage container create --name ${{secrets.AZURE_STORAGE_CONTAINER_NAME}} \
            --account-name ${{secrets.AZURE_STORAGE_ACCOUNT_NAME}} \
            --resource-group ${{secrets.AZURE_RESOURCE_GROUP_NAME}} \
            --public-access blob

    - name: Upload to blob storage
      uses: azure/CLI@v1
      with:
        inlineScript: |
            az storage blob upload-batch --account-name ${{secrets.AZURE_STORAGE_ACCOUNT_NAME}} \
            --destination ${{secrets.AZURE_STORAGE_CONTAINER_NAME}} \
            --source build \
            --pattern *.* \
            --auth-mode key 
    - name: logout
      run: |
            az logout
      if: always()
#     - name: Purge CDN endpoint
#       uses: azure/CLI@v1
#       with:
#         inlineScript: |
#            az cdn endpoint purge --content-paths  "/*" --profile-name "CDN_PROFILE_NAME" --name "CDN_ENDPOINT" --resource-group "RESOURCE_GROUP"
